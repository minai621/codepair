name: electron-build
on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        node-version: [18.x]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Clear Electron Builder cache
        if: runner.os == 'Windows'
        run: |
          Remove-Item -Path "$env:USERPROFILE\AppData\Local\electron-builder\Cache" -Recurse -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "$env:LOCALAPPDATA\electron-builder\Cache" -Recurse -Force -ErrorAction SilentlyContinue
        continue-on-error: true

      - name: Download and Install NSIS 3.0.4.1
        if: runner.os == 'Windows'
        run: |
          $nsisUrl = "https://github.com/electron-userland/electron-builder-binaries/releases/download/nsis-3.0.4.1/nsis-3.0.4.1.7z"
          $nsisPath = "$env:TEMP\nsis-3.0.4.1.7z"
          Invoke-WebRequest -Uri $nsisUrl -OutFile $nsisPath
          7z x $nsisPath -o"$env:ProgramFiles (x86)\nsis-3.0.4.1" -y
          echo "$env:ProgramFiles (x86)\nsis-3.0.4.1" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Set NSIS path and environment variables
        if: runner.os == 'Windows'
        run: |
          echo "NSIS_ROOT=$env:ProgramFiles (x86)\nsis-3.0.4.1" >> $env:GITHUB_ENV
          echo "ELECTRON_BUILDER_NSIS_DIR=$env:ProgramFiles (x86)\nsis-3.0.4.1" >> $env:GITHUB_ENV
          echo "PATH=$env:ProgramFiles (x86)\nsis-3.0.4.1;$env:PATH" >> $env:GITHUB_ENV

      - name: Verify NSIS Installation
        if: runner.os == 'Windows'
        run: |
          Get-Command makensis
          Get-ChildItem "$env:ProgramFiles (x86)\nsis-3.0.4.1" -Recurse
          echo $env:PATH

      - name: Build/release Electron app
        uses: minai621/action-electron-builder@v1
        env:
          DEBUG: electron-builder
        with:
          package_root: native
          build_script_name: release
          github_token: ${{ secrets.github_token }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          args: "--win nsis"
